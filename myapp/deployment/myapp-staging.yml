---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: myapp-ns 
spec:
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: myapp-config
  namespace: myapp-ns
data:
  domain: <DNSNAME>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: myapp-ns
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: steveltn/https-portal:1
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
          - name: DOMAINS 
            valueFrom:
              configMapKeyRef:
                name: myapp-config
                key: domain       
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-gce
  namespace: myapp-ns
  annotations:
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.global-static-ip-name: myapp-nginx-service-web-ip
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    cert-manager.io/cluster-issuer: letsencrypt-staging
    acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  rules:
    - host: <DNSNAME>
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: nginx-service
              port:
                number: 80
  tls:
    - hosts:
      - <DNSNAME>
      secretName: myapp-secret-staging-tls